---
layout:     post
title:      "异常"
subtitle:   " \"exception\""
date:       2018-10-26 06:00:00
author:     "青乡"
header-img: "img/post-bg-2015.jpg"
catalog: true
tags:
    - 异常
---


# 作用
28原则，
1.业务代码只占代码的20%。
2.异常处理代码占80%。

可见异常代码处理的重要性。

# 分类
一、代码-编译时错误
IDE就能检查出来。

例如
1.很多方法抛出异常，你必须要去捕获或者抛出，这个时候IDE会检查提示开发人员。
？
2.
3.

二、代码-运行时错误
只有在代码执行的时候，才会发生。

例如
1.除数为0
2.数组越界

三、用户输入错误
1.前端输入数据
2.后台校验数据
3.前端提示用户

# 异常是怎么产生的
1.发生时间
代码运行时，发生异常。

2.发生过程
根据方法调用栈，一直往上抛，直到被某一个方法捕获处理，就不再往上抛。
换句话说，异常只被捕获一次。

3.发生位置
抛异常的位置，分2种
1.方法声明的的时候抛异常
方法 throws 异常｛
｝

2.方法体里面抛异常
throw new 异常名字();


# 被调用方法的异常被最近的捕获代码捕获
一、场景1
1.只有一个方法。
2.方法内部捕获自己抛出的异常。

二、场景2
1.方法1
抛出异常。
2.方法2
捕获异常。

三、场景3
1.方法1
抛出异常

2.方法2
没有捕获，也没有抛出

3.方法3
1）捕获异常，是捕获最近的异常，而且，只捕获一次。

2）会捕获方法1的异常吗？中间间隔了一个方法，而且中间方法没有抛出，还会去捕获吗？

写个代码测试一下就知道了。

# 整合以前的笔记和文章
