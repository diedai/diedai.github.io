---
layout:     post
title:      "平衡二叉树之红黑树"
subtitle:   " \"red black tree\""
date:       2018-10-06 06:00:00
author:     "青乡"
header-img: "img/post-bg-2015.jpg"
catalog: true
tags:
    - DataStructure&Algorithm
---



# 最常用的

平衡二叉树。



# 但是有一个问题

插入

就是插入数据的时候，如果数据

1.顺序

2.逆序



这2种情况，会导致树不平衡，即节点都跑到一边去了，而另一边没有数据。



---

非平衡二叉树会导致什么问题呢？

平衡二叉树的优点是查找数据快，只需要logN。



如果二叉树不平衡，全部节点跑到一边去了，那就是一个单链表，链表查找很慢，速度是N。



所以导致的问题就是，非平衡二叉树体现了树这种数据结构的优势。



# 怎么解决二叉树的不平衡问题？

使用红黑树。



---

什么是红黑树？

1.颜色

节点有颜色。



2.规则

插入或删除，必须遵守4条规则，以确保二叉树的平衡。



---

插入规则

1.节点有颜色，不是黑，就是红。

2.根节点必须是黑。

3.父节点是红，那么子节点必须是黑。（反之不一定，就是父节点是黑，子节点可以是红也可以是黑）

4.黑色高度一样。



# 参考

https://zhuanlan.zhihu.com/p/31805309



![](http://pg60ucix6.bkt.clouddn.com/WechatIMG1011-1.jpeg)
![](http://pg60ucix6.bkt.clouddn.com/WechatIMG1011-2.jpeg)
![](http://pg60ucix6.bkt.clouddn.com/WechatIMG1011-3.jpeg)
