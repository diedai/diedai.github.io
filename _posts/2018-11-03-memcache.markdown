---
layout:     post
title:      "memcache"
subtitle:   " \"缓存中间件\""
date:       2018-11-03 06:00:00
author:     "青乡"
header-img: "img/post-bg-2015.jpg"
catalog: true
tags:
    - cache
---



# 发展史

# 作用

# 替代了什么
基于内存的数据库。  

替代了关系数据库，因为关系数据库太重了，准备工作需要创建数据库、表，操作数据的时候又需要建立连接，连接很耗资源。

memcache就是为了替代关系数据库，准确的说，是**减轻**(不是真的替代)关系数据库的负担，把部分数据放到内存数据库里。

---
什么样的数据适合放到内存数据库？  
1.非持久化数据  
如果需要持久化，就放到关系数据库。

临时存储。不经常变动的数据。实时性要求不高的数据。

2.数据要小  
内存里只放最重要的数据，因为内存一般比较小。

满足上面的条件，就比较适合放内存数据库。


---
应用场景  
1.手机验证码 //也是一种标识id  

2.各种标识id //防止订单重复提交

3.用户id //其实也可以放缓存，但是最佳实践一般是放会话里

# 为什么要用
因为它是内存数据库，比关系数据库更快。

# 怎么用
1.服务器  
c语言写的。  
启动服务器即可。


2.客户端  
多种方式。

可以图形用户界面客户端，  
web，  
jar包 //java

# 应用场景

# 数据类型
一般数据类型都支持。比如：  
字符串  
对象

# 分布式
支持分布式。

---
可以节约内存  
怎么节约？  
？

---
多个节点怎么安装？与web服务器的关系？  
？

---
多个节点，数据是怎么存储的？备份情况是怎么样的？

# 支持编程语言
基本上都支持。

包括：java，c，c++等。

# 底层实现
map数据结构。

# 访问速度
1 //因为是map数据结构

# 并发数量
每秒数百万请求。  

Queries on slow machines should run in well under 1ms. High end servers can serve millions of keys per second in throughput.

# 参考
https://github.com/memcached/memcached/wiki
